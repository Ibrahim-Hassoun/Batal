name: CI
on:
  push:
    branches:
      - stage

jobs: 
  laravel-ci:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: laravel
          MYSQL_DATABASE: laravel
          MYSQL_USER: laravel
          MYSQL_PASSWORD: laravel
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'  
          extensions: mbstring, ctype, fileinfo, openssl, pdo, tokenizer, xml  
          coverage: none
          
      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: backend/vendor  
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}  

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist
        working-directory: backend

      - name: copy .env
        run: cp .env.example .env
        working-directory: backend
        
      - name: Generate Laravel key
        run: php artisan key:generate --show  
        working-directory: backend
        
      - name:  Generate JWT secret
        run: php artisan jwt:secret
        working-directory: backend
        
      - name: Run Migrations
        run: php artisan migrate --force
        working-directory: backend
        env: 
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel
          DB_USERNAME: laravel
          DB_PASSWORD: laravel

      - name: Run Tests
        run: php artisan test || true
        working-directory: backend

      - name: Verify Laravel boot
        run: |
          php artisan serve --no-interaction &
          sleep 10  
          curl -I http://127.0.0.1:8000  
        working-directory: backend

  Staging-deployment:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Copy files to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@15.237.142.115 'bash -s' < ./deploy_script.sh

    env:
      PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
